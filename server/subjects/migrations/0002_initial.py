# Generated by Django 4.1.7 on 2023-04-01 08:10

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reviews', '0003_initial'),
        ('jmdict', '0001_initial'),
        ('languages', '0002_initial'),
        ('subjects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='subject',
            name='users',
            field=models.ManyToManyField(related_name='subjects', through='reviews.Review', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grammarquestiontranslation',
            name='grammar_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='subjects.grammarquestion'),
        ),
        migrations.AddField(
            model_name='grammarquestiontranslation',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='language_grammar_questions_translation', to='languages.language'),
        ),
        migrations.AddField(
            model_name='customsubjectquestions',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_questions', to='subjects.subject'),
        ),
        migrations.CreateModel(
            name='Grammar',
            fields=[
                ('japanesesubject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.japanesesubject')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('meaning', models.CharField(max_length=150)),
                ('structure', models.CharField(max_length=150)),
                ('formality', models.CharField(choices=[('丁寧語', 'Polite'), ('尊敬語', 'Honorific'), ('謙譲語', 'Humble'), ('casual', 'Casual'), ('very casual', 'Very casual'), ('standard', 'Used in any case')], max_length=11)),
                ('explanation', models.TextField()),
                ('formality_matters_for_its_questions', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('subjects.japanesesubject',),
        ),
        migrations.CreateModel(
            name='Kana',
            fields=[
                ('japanesesubject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.japanesesubject')),
                ('mnemonic_explanation', models.TextField(default='', null=True)),
                ('mnemonic_image', models.TextField(default='', null=True)),
                ('mnemonic_image_content_type', models.TextField(choices=[('image/png', 'png'), ('image/svg+xml', 'svg'), ('', 'does not exist')], max_length=13)),
                ('character', models.CharField(max_length=7, unique=True)),
                ('reading', models.CharField(max_length=20)),
                ('kana_type', models.CharField(choices=[('hiragana', 'hiragana'), ('katakana', 'katakana')], max_length=8)),
                ('pronunciation_note', models.CharField(max_length=150, null=True)),
                ('is_special_kana', models.BooleanField(default=False)),
                ('special_kana_explanation', models.TextField(null=True)),
                ('audio_file', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('subjects.japanesesubject', models.Model),
        ),
        migrations.CreateModel(
            name='Radical',
            fields=[
                ('japanesesubject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.japanesesubject')),
                ('mnemonic_explanation', models.TextField(default='', null=True)),
                ('mnemonic_image', models.TextField(default='', null=True)),
                ('mnemonic_image_content_type', models.TextField(choices=[('image/png', 'png'), ('image/svg+xml', 'svg'), ('', 'does not exist')], max_length=13)),
                ('character', models.CharField(max_length=1, unique=True)),
                ('meaning', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('subjects.japanesesubject', models.Model),
        ),
        migrations.CreateModel(
            name='Kanji',
            fields=[
                ('japanesesubject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.japanesesubject')),
                ('character', models.CharField(max_length=1, unique=True)),
                ('stroke_count', models.PositiveIntegerField()),
                ('freq', models.PositiveIntegerField(null=True, unique=True)),
                ('grade', models.PositiveIntegerField(null=True)),
                ('kunyomi', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), default=list, size=None)),
                ('onyomi', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), default=list, size=None)),
                ('meanings', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('main_meanings_to_use', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('meaning_mnemonic', models.TextField(default='')),
                ('kanji_contained_within_this', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1), default=list, size=None)),
                ('radicals_used', models.ManyToManyField(related_name='kanji_that_uses_this', to='subjects.radical')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('subjects.japanesesubject',),
        ),
        migrations.CreateModel(
            name='JapaneseVocabulary',
            fields=[
                ('japanesesubject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.japanesesubject')),
                ('meaning_mnemonic', models.TextField(null=True)),
                ('reading_mnemonic', models.TextField(null=True)),
                ('main_meanings_to_use', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('main_text_representation', models.CharField(max_length=30, null=True)),
                ('audio_file', models.TextField(null=True)),
                ('is_a_counter_word', models.BooleanField(default=False)),
                ('jmdict', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jmdict.jmdictentries')),
                ('kanji_that_this_uses', models.ManyToManyField(related_name='vocabulary_that_uses_this', to='subjects.kanji')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('subjects.japanesesubject',),
        ),
        migrations.AddField(
            model_name='grammarquestion',
            name='grammar_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='subjects.grammar'),
        ),
        migrations.AddField(
            model_name='customjapanesevocabularyquestions',
            name='vocabulary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subjects.japanesevocabulary'),
        ),
    ]
